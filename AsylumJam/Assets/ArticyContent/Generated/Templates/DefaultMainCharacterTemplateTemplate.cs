// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using UnityEngine;
using System.Collections.Generic;
using Articy.Unity.Interfaces;
using Articy.Unity;
using Articy.Asylumjame.Features;
using Articy.Asylumjame;

namespace Articy.Asylumjame.Templates
{
    
    
    [Serializable()]
    public class DefaultMainCharacterTemplateTemplate : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private ArticyValueDefaultExtendedCharacterFeatureFeature mDefaultExtendedCharacterFeature = new ArticyValueDefaultExtendedCharacterFeatureFeature();
        
        [SerializeField()]
        private ArticyValueDefaultBasicCharacterFeatureFeature mDefaultBasicCharacterFeature = new ArticyValueDefaultBasicCharacterFeatureFeature();
        
        public Articy.Asylumjame.Features.DefaultExtendedCharacterFeatureFeature DefaultExtendedCharacterFeature
        {
            get
            {
                return mDefaultExtendedCharacterFeature.GetValue();
            }
            set
            {
                mDefaultExtendedCharacterFeature.SetValue(value);
            }
        }
        
        public Articy.Asylumjame.Features.DefaultBasicCharacterFeatureFeature DefaultBasicCharacterFeature
        {
            get
            {
                return mDefaultBasicCharacterFeature.GetValue();
            }
            set
            {
                mDefaultBasicCharacterFeature.SetValue(value);
            }
        }
        
        private void CloneProperties(object aClone)
        {
            Articy.Asylumjame.Templates.DefaultMainCharacterTemplateTemplate newClone = ((Articy.Asylumjame.Templates.DefaultMainCharacterTemplateTemplate)(aClone));
            if ((DefaultExtendedCharacterFeature != null))
            {
                newClone.DefaultExtendedCharacterFeature = ((Articy.Asylumjame.Features.DefaultExtendedCharacterFeatureFeature)(DefaultExtendedCharacterFeature.CloneObject()));
            }
            if ((DefaultBasicCharacterFeature != null))
            {
                newClone.DefaultBasicCharacterFeature = ((Articy.Asylumjame.Features.DefaultBasicCharacterFeatureFeature)(DefaultBasicCharacterFeature.CloneObject()));
            }
        }
        
        public object CloneObject()
        {
            Articy.Asylumjame.Templates.DefaultMainCharacterTemplateTemplate clone = new Articy.Asylumjame.Templates.DefaultMainCharacterTemplateTemplate();
            CloneProperties(clone);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            int featureIndex = aProperty.IndexOf('.');
            if ((featureIndex != -1))
            {
                string featurePath = aProperty.Substring(0, featureIndex);
                string featureProperty = aProperty.Substring((featureIndex + 1));
                if ((featurePath == "DefaultExtendedCharacterFeature"))
                {
                    DefaultExtendedCharacterFeature.setProp(featureProperty, aValue);
                }
                if ((featurePath == "DefaultBasicCharacterFeature"))
                {
                    DefaultBasicCharacterFeature.setProp(featureProperty, aValue);
                }
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            int featureIndex = aProperty.IndexOf('.');
            if ((featureIndex != -1))
            {
                string featurePath = aProperty.Substring(0, featureIndex);
                string featureProperty = aProperty.Substring((featureIndex + 1));
                if ((featurePath == "DefaultExtendedCharacterFeature"))
                {
                    return DefaultExtendedCharacterFeature.getProp(featureProperty);
                }
                if ((featurePath == "DefaultBasicCharacterFeature"))
                {
                    return DefaultBasicCharacterFeature.getProp(featureProperty);
                }
            }
            return null;
        }
        #endregion
    }
}
